{"title":"Wine Quality Prediction Using Stacking Model And Hyperparameter Tuning","markdown":{"yaml":{"title":"Wine Quality Prediction Using Stacking Model And Hyperparameter Tuning","format":"html"},"headingText":"Import packages","containsRefs":false,"markdown":"\n\n```{python}\nimport warnings\nwarnings.filterwarnings('ignore')\n# Loading the necessary packages\nimport random\nfrom seaborn.palettes import color_palette\nrandom.seed(1296)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nfrom pandas import read_csv\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n```\n\n## Data\n```{python}\n# Load the dataset\nwq_data = read_csv(\"dataset/winequality-red.csv\",header=0)\nstyle = [\n    {'selector': 'th', 'props': [\n        ('background-color', '#373c41ff'),\n        ('color', 'white'),\n        ('font-weight', 'bold')\n    ]}\n]\ndisplay(wq_data.head(5).style.set_table_styles(style).format(\"{:.2f}\"))\ndisplay(wq_data.describe().style.set_table_styles(style).format(\"{:.2f}\"))\n```\n\nThere are 11 alcohol features in the dataset with 1 variable \"quality\" representing the evaluated alcohol quality that we are going to predict. The quality scores range from 3 to 8 in the dataset.\n\n## EDA\n### Pairplot\nCreate pairplot to observe the relationship between variables colored by \"quality\"\n```{python}\n# create pairplot\npairplot = sns.pairplot(wq_data, hue=\"quality\", diag_kind=\"hist\")\npairplot.fig.suptitle(\"Pairplot\", fontsize=50, y=1.02);\n```\nVisually alhocols with higher levels of \"Sulphates\", \"Alcohol\", \"Residual Sugar\" tend to have higher quality. Next, let's graph the correlation between features and \"Quality\" directly.\n\n### Correlation Heatmap\n```{python}\n# create correlation map\nfig, ax = plt.subplots(figsize = (10,7), dpi=150)\nsns.heatmap(wq_data.corr(), annot=True, linewidths=2, fmt = '.2f', cmap=\"crest\", ax = ax)\nax.set_title(\"Correlation - wine features vs. wine quality scores\", fontsize=18, y=1.02, x=0.5)\nax.tick_params(axis='x', rotation=45);\nplt.tight_layout()\n```\nFrom the correlation heatmap, \"Volatile acidity\" is negatively correlated with \"Quality\"; \"Alcohol\" and \"Citric acid\" are positively correlated with \"Quality\". Next, let's plot the distribution of these three features for each alchohol quality from 3 to 8.\n\n### Density plot\n```{python}\ndef melt_table(df, quality):\n    # filter for quality subset\n    df_subset = df[df['quality'] == quality]\n    df_subset_melted = df_subset.melt(\n        value_vars = ['alcohol','volatile acidity','citric acid'],\n        var_name = 'wine_feature',\n        value_name = 'value'\n    )\n    df_subset_melted['quality'] = quality\n    return df_subset_melted\n\nmerged_df = pd.DataFrame()\nmin_q = wq_data['quality'].min()\nmax_q = wq_data['quality'].max()\nfor q in range(min_q, max_q+1):\n    merged_df = pd.concat([merged_df, melt_table(wq_data, q)])\n```\n\n```{python}\npairs = ((i,j) for i in [0, 1] for j in [0, 1, 2])\n# Density plot\nfig, axes = plt.subplots(2, 3, figsize = (20, 15), sharex=True, sharey=True, dpi=200)\nfor ax in axes.flat:\n    ax.tick_params(axis='x', which='both', labelbottom=True)\nq = 3\nfor idx, pair in enumerate(pairs):\n    axes[pair[0], pair[1]].set_facecolor('#f2f3f4ff')\n    axes[pair[0], pair[1]].set_axisbelow(True)\n    axes[pair[0], pair[1]].grid(True, color = 'white', linewidth = 1)\n    sns.kdeplot(ax = axes[pair[0], pair[1]], data = merged_df[merged_df['quality']==q], x = 'value', hue='wine_feature', fill=True, palette='gist_earth')\n    q+=1\n    axes[pair[0], pair[1]].set_title(f'Alcohol Quality = {q-1}')\nfig.suptitle('Wine features density distributions by wine quality scores', y=1.01, fontsize = 30)\nplt.tight_layout()\n```\nThe density plot shows that obviously the higher quality alchohol has higher \"alcohol\" levels and relatively lower \"Volatile acid' and \"Citrid acid\".\n","srcMarkdownNoYaml":"\n\n## Import packages\n```{python}\nimport warnings\nwarnings.filterwarnings('ignore')\n# Loading the necessary packages\nimport random\nfrom seaborn.palettes import color_palette\nrandom.seed(1296)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nfrom pandas import read_csv\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n```\n\n## Data\n```{python}\n# Load the dataset\nwq_data = read_csv(\"dataset/winequality-red.csv\",header=0)\nstyle = [\n    {'selector': 'th', 'props': [\n        ('background-color', '#373c41ff'),\n        ('color', 'white'),\n        ('font-weight', 'bold')\n    ]}\n]\ndisplay(wq_data.head(5).style.set_table_styles(style).format(\"{:.2f}\"))\ndisplay(wq_data.describe().style.set_table_styles(style).format(\"{:.2f}\"))\n```\n\nThere are 11 alcohol features in the dataset with 1 variable \"quality\" representing the evaluated alcohol quality that we are going to predict. The quality scores range from 3 to 8 in the dataset.\n\n## EDA\n### Pairplot\nCreate pairplot to observe the relationship between variables colored by \"quality\"\n```{python}\n# create pairplot\npairplot = sns.pairplot(wq_data, hue=\"quality\", diag_kind=\"hist\")\npairplot.fig.suptitle(\"Pairplot\", fontsize=50, y=1.02);\n```\nVisually alhocols with higher levels of \"Sulphates\", \"Alcohol\", \"Residual Sugar\" tend to have higher quality. Next, let's graph the correlation between features and \"Quality\" directly.\n\n### Correlation Heatmap\n```{python}\n# create correlation map\nfig, ax = plt.subplots(figsize = (10,7), dpi=150)\nsns.heatmap(wq_data.corr(), annot=True, linewidths=2, fmt = '.2f', cmap=\"crest\", ax = ax)\nax.set_title(\"Correlation - wine features vs. wine quality scores\", fontsize=18, y=1.02, x=0.5)\nax.tick_params(axis='x', rotation=45);\nplt.tight_layout()\n```\nFrom the correlation heatmap, \"Volatile acidity\" is negatively correlated with \"Quality\"; \"Alcohol\" and \"Citric acid\" are positively correlated with \"Quality\". Next, let's plot the distribution of these three features for each alchohol quality from 3 to 8.\n\n### Density plot\n```{python}\ndef melt_table(df, quality):\n    # filter for quality subset\n    df_subset = df[df['quality'] == quality]\n    df_subset_melted = df_subset.melt(\n        value_vars = ['alcohol','volatile acidity','citric acid'],\n        var_name = 'wine_feature',\n        value_name = 'value'\n    )\n    df_subset_melted['quality'] = quality\n    return df_subset_melted\n\nmerged_df = pd.DataFrame()\nmin_q = wq_data['quality'].min()\nmax_q = wq_data['quality'].max()\nfor q in range(min_q, max_q+1):\n    merged_df = pd.concat([merged_df, melt_table(wq_data, q)])\n```\n\n```{python}\npairs = ((i,j) for i in [0, 1] for j in [0, 1, 2])\n# Density plot\nfig, axes = plt.subplots(2, 3, figsize = (20, 15), sharex=True, sharey=True, dpi=200)\nfor ax in axes.flat:\n    ax.tick_params(axis='x', which='both', labelbottom=True)\nq = 3\nfor idx, pair in enumerate(pairs):\n    axes[pair[0], pair[1]].set_facecolor('#f2f3f4ff')\n    axes[pair[0], pair[1]].set_axisbelow(True)\n    axes[pair[0], pair[1]].grid(True, color = 'white', linewidth = 1)\n    sns.kdeplot(ax = axes[pair[0], pair[1]], data = merged_df[merged_df['quality']==q], x = 'value', hue='wine_feature', fill=True, palette='gist_earth')\n    q+=1\n    axes[pair[0], pair[1]].set_title(f'Alcohol Quality = {q-1}')\nfig.suptitle('Wine features density distributions by wine quality scores', y=1.01, fontsize = 30)\nplt.tight_layout()\n```\nThe density plot shows that obviously the higher quality alchohol has higher \"alcohol\" levels and relatively lower \"Volatile acid' and \"Citrid acid\".\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"wine_quality_prediction.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":{"light":"cosmo"},"code-background":true,"code-copy":true,"title":"Wine Quality Prediction Using Stacking Model And Hyperparameter Tuning"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}